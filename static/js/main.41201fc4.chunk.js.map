{"version":3,"sources":["img/sunny.jpg","img/night.jpg","img/rainy.jpg","img/snowy.jpg","img/storm-day.jpg","img/sunset.jpg","img/stormy.jpg","img/night-rain.jpg","img/snow-night.jpg","components/weather.jsx","components/search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Weather","props","className","city","country","localtime","src","weather_icon","alt","weather_description","temperature","temp_in_fahrenheit","p","h","precipHumidity","precip","humidity","feelslike","Search","error","role","onSubmit","search","type","name","placeholder","autoComplete","icon","faSearchLocation","api_key","App","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","console","log","setState","location","region","current","weather_icons","weather_descriptions","t","state","slice","time","parseInt","temp","description","changeBackground","convertToFahrenheit","undefined","timezone","backgroundStyle","backgroundImage","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","includes","this","Night_Rain","Rainy","Night","Sunny","Snowy_Night","Snowy","Stormy_Night","Stormy_Day","Sunset","fahrenheit","Math","floor","style","onclick","handleClick","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41201fc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.d4db3b1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.da5dad4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.e701603c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.2e68acc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/storm-day.90e77b0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.c881e10c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stormy.5c4e3693.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-rain.ce211a99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow-night.00660aaa.jpg\";","import './animate.css';\r\nimport React from \"react\";\r\n\r\nconst Weather = (props) => {\r\n    return (\r\n        <div className=\"container d-flex justify-content-center text-light\" >\r\n            <div className=\"weather-cards\">\r\n                <h2>{props.city}</h2>\r\n                <h2>{props.country}</h2>\r\n                <h5 className=\"date-time\">{props.localtime}</h5>\r\n                <h5 className=\"py-4\">\r\n                    <img src={props.weather_icon} alt={props.weather_description}/>\r\n                </h5>\r\n                \r\n                {props.temperature ? (<h1 className=\"py-2\">\r\n                    {props.temperature}&deg;C/ {props.temp_in_fahrenheit}&deg;F\r\n                </h1>) : null}\r\n\r\n                {precipHumidity(props.precip, props.humidity)}\r\n                {props.feelslike ? (<p>Feels like: {props.feelslike}&deg;C</p>) : null}\r\n                <br></br>\r\n                <h4 className=\"weather-condition pb-3 mb-3\">{props.weather_description}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction precipHumidity(p,h) {\r\n    if (p >= 0 && h) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <h5 className=\"px-4\">Humidity: {h}</h5>\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <h5 className=\"px-4\">Precipitation: {p}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './search.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearchLocation } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Search = props => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div>{props.error ? displayError() : null}</div>\r\n            <form onSubmit={props.search}>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-md-6 mt-3 mb-3\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"city\" placeholder=\"City\" autoComplete=\"on\"/>\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-3 mb-3 d-flex justify-content-center\">\r\n                        <button className=\"btn ghost-button\"><FontAwesomeIcon icon={faSearchLocation}></FontAwesomeIcon></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction displayError() {\r\n    return (\r\n        <div className=\"alert alert-danger error-alert mx-5\" role=\"alert\">\r\n            Please Enter a City!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Weather from './components/weather';\nimport Search from './components/search';\n\nimport Sunny from './img/sunny.jpg';\nimport Night from './img/night.jpg';\nimport Rainy from './img/rainy.jpg';\nimport Snowy from './img/snowy.jpg';\nimport Sunset from './img/sunset.jpg';\nimport Stormy_Night from './img/stormy.jpg';\nimport Stormy_Day from './img/storm-day.jpg';\nimport Night_Rain from './img/night-rain.jpg';\nimport Snowy_Night from './img/snow-night.jpg';\n\n\nconst api_key = '8d0e8496bd923c4580b2ea219d71e470';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      localtime: undefined,\n      timezone: undefined,\n      temperature: undefined,\n      temp_in_fahrenheit: undefined,\n      feelslike: undefined,\n      precip: undefined,\n      humidity: undefined,\n      weather_icon: undefined,\n      weather_description: \"\",\n      error: false,\n      backgroundStyle: {\n        backgroundImage: undefined,\n        backgroundColor: 'black',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n      }\n    };\n  }\n\n  changeBackground(time, description) {\n    // Check for rain\n    if (description.includes('shower') || description.includes('rain')) {\n      if (time >= 20 || (time >= 0 && time < 7)) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Night_Rain+')'\n          }\n        });\n      } else if (time > 7 && time < 20) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Rainy+')'\n          }\n        });\n      } else {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Rainy+')'\n          }\n        });\n      }\n    }\n    // Check for clear sky/sunny\n    else if (description.includes('sunny') || description.includes('clear')) {\n      if (time >= 20 || (time >= 0 && time < 7)) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Night+')'\n          }\n        });\n      } else if (time > 7 && time < 20) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Sunny+')'\n          }\n        });\n      } else {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Sunny+')'\n          }\n        });\n      }\n    }\n    // Check for snow\n    else if (description.includes('snow') || description.includes('sleet')) {\n      if (time >= 20 || (time >= 0 && time < 7)) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Snowy_Night+')'\n          }\n        });\n      } else if (time > 7 && time < 20) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Snowy+')'\n          }\n        });\n      } else {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Snowy+')'\n          }\n        });\n      }\n    }\n    // Check for storm\n    else if (description.includes('storm')) {\n      if (time >= 20 || (time >= 0 && time < 7)) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Stormy_Night+')'\n          }\n        });\n      } else if (time > 7 && time < 20) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Stormy_Day+')'\n          }\n        });\n      } else {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Stormy_Day+')'\n          }\n        });\n      }\n    } \n    // No condition - default\n    else {\n      if (time >= 20 || (time >= 0 && time < 7)) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Night+')'\n          }\n        });\n      } else if (time > 7 && time < 17) {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Sunny+')'\n          }\n        });\n      } else {\n        this.setState({\n          backgroundStyle: {\n            backgroundImage: 'url('+Sunset+')'\n          }\n        });\n      }\n    }\n  }\n\n  convertToFahrenheit(temp) {\n    let fahrenheit = Math.floor((temp * 1.8) + 32);\n    this.setState({\n      temp_in_fahrenheit: fahrenheit\n    });\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n\n    if(city) {\n      const api_call = await fetch(`http://api.weatherstack.com/current?access_key=${api_key}&query=${city}`);\n      const response = await api_call.json();\n\n      console.log(response);\n\n      this.setState({\n        city: `${response.location.name}, ${response.location.region}`,\n        country: response.location.country,\n        localtime: response.location.localtime,\n        temperature: response.current.temperature,\n        feelslike: response.current.feelslike,\n        precip: response.current.precip,\n        humidity: response.current.humidity,\n        weather_icon: response.current.weather_icons,\n        weather_description: response.current.weather_descriptions\n      });\n\n      const t = this.state.localtime.slice(11, 13);\n      const time = parseInt(t);\n      const temp = parseInt(this.state.temperature);\n      const description = this.state.weather_description;\n\n      this.changeBackground(time, description);\n      this.convertToFahrenheit(temp);\n\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"App\" style={this.state.backgroundStyle}>\n        <Search \n          search={this.getWeather} \n          error={this.state.error} \n        />\n        <Weather \n          city={this.state.city} \n          country={this.state.country}\n          localtime={this.state.localtime}\n          temperature={this.state.temperature}\n          temp_in_fahrenheit={this.state.temp_in_fahrenheit}\n          feelslike={this.state.feelslike}\n          onclick={this.state.handleClick}\n          precip = {this.state.precip}\n          humidity = {this.state.humidity}\n          weather_icon = {this.state.weather_icon}\n          weather_description = {this.state.weather_description} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}